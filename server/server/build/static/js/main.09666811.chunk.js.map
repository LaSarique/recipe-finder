{"version":3,"sources":["components/reducer/actions.js","components/FormChecklist.js","components/Form.js","components/ApiClient.js","components/RecipeSteps.js","components/RecipeItem.js","components/RecipeList.js","components/ParamsSetter.js","components/Heading.js","components/reducer/reducers.js","components/Buttons.js","App.js","index.js"],"names":["ACTIONS","FormChecklist","useState","dropDown","setDropDown","Dairy","Egg","Peanut","Shellfish","isChecked","setisChecked","dispatch","useContext","dispatchContext","checkboxHandler","e","temp","target","name","useEffect","type","state","value","className","onChange","preventDefault","map","i","checked","Form","inputValue","setInputValue","showOptions","setShowOptions","stateContext","onSubmit","required","htmlFor","style","visibility","foodOptions","onClick","getSearch","query","a","page","console","log","url","axios","get","res","results","data","total","totalResults","getRecipe","id","RecipeSteps","recipe","Object","keys","length","t","RecipeItem","title","image","setRecipe","fetchRecipes","fetchData","closest","classList","toggle","src","alt","undefined","RecipeList","ParamsSetter","stringIntolerances","intolerances","filter","join","q","switchCases","diet","apiQ","Heading","totalHits","totalHitsContext","intoleranceString","replace","toLocaleLowerCase","reducer","action","newQuery","stateUpdater","Buttons","optionLength","setOptionLength","paginationHandler","contains","newPage","fn","cb","newData","createContext","initState","App","useReducer","setTotalHits","allData","getData","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09666811.chunk.js","sourcesContent":["export const ACTIONS = {\r\n    UPDATESTATE: 'updateState',\r\n    CLEARALLSTATE: 'clearAllState',\r\n    // UPDATEPAGE: 'updatePage',\r\n    // UPDATEPARAMS: 'updateParams'\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { dispatchContext } from '../App';\r\nimport { ACTIONS } from './reducer/actions';\r\n\r\nconst FormChecklist = () => {\r\n  const [dropDown, setDropDown] = useState(\"\");\r\n  const [isChecked,setisChecked] = useState(\r\n    {Dairy: false, Egg: false, \"Tree Nut\": false, Peanut: false, Shellfish: false}\r\n  );\r\n  const dispatch = useContext(dispatchContext);\r\n\r\n  const selectHandler = e => {\r\n    e.preventDefault(); \r\n    setDropDown(e.target.value)\r\n  };\r\n  const intoleranceList = ['Dairy', 'Egg', 'Tree Nut', 'Peanut', 'Shellfish'];\r\n  const checkboxHandler = e => {\r\n    //e.preventDefault();\r\n    let temp = isChecked;\r\n    temp[e.target.name] = !temp[e.target.name]; \r\n    setisChecked({...temp});\r\n  }\r\nuseEffect(()=> {\r\n  dispatch({type:ACTIONS.UPDATESTATE, state: 'intolerances', value:isChecked});\r\n  dispatch({type:ACTIONS.UPDATESTATE, state: 'diet', value:dropDown});\r\n},[dispatch,isChecked, dropDown]);\r\n    return (\r\n<>\r\n\r\n<select className=\"select-main\" key='dropdown' value= {dropDown||\"\"} onChange={selectHandler}>\r\n  <option key='1' value= \"\" >No dietary preference</option>\r\n  <option key='2' value= \"Vegetarian\">Vegetarian</option>\r\n  <option key='3' value= \"Vegan\">Vegan</option>\r\n  <option key='4' value= \"Gluten Free\">Gluten Free</option>\r\n  <option key='5' value= \"Ketogenic\">High Protein</option>\r\n</select>\r\n{intoleranceList.map(i => \r\n( <span\r\n  className=\"checkbox-container\" \r\n  key={\"span\"+i}>\r\n  <input\r\n  className=\"checkbox-input\" \r\n  type=\"checkbox\"\r\n  name= {i}\r\n  key={i}\r\n  checked={isChecked[i]}\r\n  onChange={checkboxHandler}\r\n  />\r\n  <label \r\n  className=\"checkbox-label\"\r\n  key={i + 1}>{i}</label>\r\n  </span>)\r\n)}\r\n</>      \r\n    );\r\n}\r\n\r\nexport default FormChecklist;\r\n","import React, { useState, useContext } from 'react';\r\nimport FormChecklist from './FormChecklist';\r\nimport { stateContext,dispatchContext } from '../App';\r\nimport { ACTIONS } from './reducer/actions';\r\nconst Form = () => {\r\n  const [inputValue, setInputValue] = useState();\r\n  const [showOptions, setShowOptions]= useState(false);\r\n\r\n  const state = useContext(stateContext);\r\n  const dispatch = useContext(dispatchContext);\r\n\r\n  const clearAll = e => {\r\n    e.preventDefault();\r\n    setInputValue(null);\r\n    dispatch({type:ACTIONS.CLEARALLSTATE});\r\n  };\r\n  const inputHandler = e => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (inputValue !== '') {\r\n        dispatch({type:ACTIONS.UPDATESTATE, state: 'query', value:inputValue});\r\n        setInputValue('')\r\n    };\r\n  };\r\n  const optionHandlers = e => {\r\n    e.preventDefault();\r\n    setShowOptions(!showOptions);\r\n  }\r\n  return (\r\n    <form\r\n    className=\"form\"\r\n    onSubmit={inputValue ? submitHandler : () => ''}>\r\n    <div className=\"has-float-label\">\r\n    <input\r\n      className=\"form_input form-control\"\r\n      type=\"text\"\r\n      value={inputValue || ''}\r\n      onChange={inputHandler}\r\n      required /> \r\n      <label\r\n      className=\"form_input-placeholder\"\r\n      htmlFor=\"search\">Search</label>\r\n    </div>\r\n    <div className=\"btn-container\">\r\n    <button\r\n      type=\"submit\"\r\n      className=\"form_add-btn btn\"\r\n      style={{visibility: !inputValue?\"hidden\":\"visible\"}}>\r\n          Submit\r\n    </button>\r\n    <button\r\n      type=\"submit\"\r\n      className=\"form_clear-btn btn\"\r\n      style={{visibility: state.foodOptions?\"hidden\":\"visible\"}}\r\n      onClick={clearAll}>\r\n      Clear All\r\n    </button>\r\n    </div>\r\n    <button\r\n    className=\"form_btn options-btn btn\"\r\n    onClick={optionHandlers}\r\n    >{showOptions ? 'Hide options': 'Show options' }</button>\r\n    {showOptions ? <FormChecklist /> : '' }\r\n  </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import axios from 'axios';\r\n\r\nexport async function getSearch(query, page = 0) {\r\n  try {\r\n    console.log('page', page);\r\n    const urlBase = 'http://localhost:8080/api/search'\r\n    const url = `${urlBase}/${query}&offset=${page}`;\r\n    const res = await axios.get(url);\r\n    return {\r\n      results: res.data.results,\r\n      total:res.data.totalResults\r\n    };\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function getRecipe(id) {\r\n    try {\r\n      const urlBase = 'http://localhost:8080/api/recipe'\r\n      const url = `${urlBase}/${id}`;\r\n      const res = await axios.get(url);\r\n      return res.data;\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  }\r\n","import React from 'react';\r\n\r\n\r\nconst RecipeSteps = ({recipe}) => {\r\n  console.log(Object.keys(recipe));\r\n  return (\r\n    <div className=\"item_recipe card__face card__face--back overlay\">\r\n      <ol>\r\n      {recipe.value && recipe.value.length>1 ? recipe.value.map(t => \r\n      <li key={t}>\r\n        {t}\r\n      </li>):''}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\nexport default RecipeSteps;","import React, { useState, useContext }  from 'react';\r\nimport {getRecipe} from './ApiClient';\r\nimport {fetchData} from '../App';\r\nimport RecipeSteps from './RecipeSteps';\r\nimport { stateContext } from '../App';\r\n\r\nconst RecipeItem = ({id, title, image}) => {\r\n  \r\nconst [recipe, setRecipe]=useState();\r\nconst state = useContext(stateContext);\r\nconst fetchRecipes= async e => {\r\ne.preventDefault();\r\nawait fetchData(id, state.page, getRecipe, setRecipe)\r\ne.target.closest(\".card\").classList.toggle('is-flipped');\r\n}\r\n\r\n  return (\r\n    <div className= 'item-container scene' >\r\n    <button\r\n    onClick={fetchRecipes}\r\n    className=\"item btn card\">\r\n            <img className=\"item_img card__face card__face--front\" src={image} alt={title}/>\r\n            <div className=\"item_desc overlay card__face card__face--front\">{title}</div>\r\n            {recipe !== undefined ?\r\n              <RecipeSteps\r\n              recipe={recipe}\r\n              />\r\n            :''}\r\n    </button>\r\n    </div>\r\n  );\r\n}\r\nexport default RecipeItem;","import React, { useContext } from 'react';\r\nimport { stateContext } from '../App';\r\nimport RecipeItem from './RecipeItem';\r\n\r\nconst RecipeList = () => {\r\nconst state = useContext(stateContext);\r\nif (state.foodOptions !== [])\r\n  return (\r\n    <div className= 'gallery-container'>\r\n    {state.foodOptions ? state.foodOptions.map(t => (\r\n      <RecipeItem\r\n      id={t.id}\r\n      key={t.id}\r\n      title={t.title}\r\n      image={t.image} />\r\n    )):()=> ''}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default RecipeList;","import { useEffect, useContext } from 'react';\r\nimport { stateContext,dispatchContext } from '../App';\r\nimport { ACTIONS } from './reducer/actions';\r\n\r\nconst ParamsSetter = () => {\r\n    const state = useContext(stateContext);\r\n    const dispatch = useContext(dispatchContext);\r\n\r\n    const stringIntolerances = Object.keys(state.intolerances).filter(id => state.intolerances[id]).join('&');\r\n  \r\n    useEffect(()=> {\r\n      console.log('state string', stringIntolerances)\r\n    let switchCases = {\r\n      allExist: state.query !==\"\" && state.diet !==\"\" && stringIntolerances.length>1,\r\n      onlyQuerynDiet: state.query !==\"\" && state.diet !==\"\" ,\r\n      onlyQuerynIntolerance: state.query !==\"\" && stringIntolerances !== \"\",\r\n      onlyQuery:state.query !==\"\",\r\n    }\r\n    let q;\r\n\r\n    switch (true) {\r\n      case switchCases.allExist:\r\n       q =`${state.query}&diet=${state.diet}&intolerances=${stringIntolerances}`;\r\n       break;\r\n      case switchCases.onlyQuerynDiet:\r\n       q =`${state.query}&diet=${state.diet}`;\r\n       break;\r\n      case switchCases.onlyQuerynIntolerance:\r\n       q =`${state.query}&intolerances=${stringIntolerances}`;\r\n       break;\r\n       case switchCases.onlyQuery:\r\n        q =`${state.query}`;\r\n        break;\r\n      default:\r\n        q= null;\r\n        break;\r\n    }\r\n    dispatch({type:ACTIONS.UPDATESTATE, state: 'apiQ', value:q});\r\n\r\n  },[dispatch, stringIntolerances, state.query,state.apiQ, state.diet, state.intolerances,state.page])\r\n  return (null)\r\n\r\n}\r\nexport default ParamsSetter;","import React, {useContext} from 'react'\r\nimport { stateContext,totalHitsContext } from '../App';\r\n\r\nconst Heading = () => {\r\n    const state = useContext(stateContext);\r\n    let totalHits = useContext(totalHitsContext);\r\n    let intoleranceString = Object.keys(state.intolerances)\r\n    .filter(id => state.intolerances[id])\r\n    .join(', ')\r\n    .replace(/, ([^,]*)$/, ' and $1');\r\n    \r\n    return (\r\n        <div>\r\n            <h2>\r\n                {state.diet === \"\"? '': state.diet} \r\n                {state.query=== \"\"? '': ` ${state.query}s`}\r\n                {intoleranceString.length===0? '': ` with no `+ intoleranceString.toLocaleLowerCase()}\r\n            </h2>\r\n            <h3>\r\n            {state.query===''? \"\": `${totalHits} results`}\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Heading;","import { ACTIONS } from './actions';\r\n\r\nconst stateUpdater = (action, state) => {\r\nconst newQuery = state;\r\nreturn {...newQuery, [action.state]: action.value}\r\n};\r\n\r\nconst stateClearer = () => {\r\n    return {\r\n        query: null,\r\n        diet: null,\r\n        intolerances: null,\r\n        foodOptions: []\r\n    }\r\n};\r\n\r\n\r\nconst reducer = (state, action) =>  {\r\n    switch (action.type) {\r\n        case ACTIONS.UPDATESTATE:\r\n            return stateUpdater(action, state);\r\n        case ACTIONS.CLEARALLSTATE:\r\n            return stateClearer();\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default reducer;\r\n\r\n// const reducer = (state, action) => {\r\n//     switch (action.type) {\r\n//       case ACTIONS.SETQUERY:\r\n//         return {\r\n//           ...state,\r\n//           [action.query]:action.value\r\n//         }\r\n//   // dispatch ({type:ACTIONS.SETQUERY, query: 'query', value: inputValue})\r\n//   // dispatch ({type:ACTIONS.SETQUERY, query: 'query', value: \"\"})\r\n//       case ACTIONS.SETDIET:\r\n//         return {\r\n//           ...state,\r\n//           [action.diet]:action.value\r\n//         }\r\n//   // dispatch ({type:ACTIONS.SETDIET, diet: 'diet', value: dropDown})\r\n//   // dispatch ({type:ACTIONS.SETDIET, diet: 'diet', value: \"\"})\r\n//       case ACTIONS.SETINTOLERANCES:\r\n//         return {\r\n//           ...state,\r\n//           [action.intolerances]:action.value\r\n//         }\r\n//   // dispatch ({type:ACTIONS.SETINTOLERANCES, intolerances: 'intolerances', value: isChecked})\r\n//   // dispatch ({type:ACTIONS.SETINTOLERANCES, intolerances: 'intolerances', value: \"\"})\r\n//       case ACTIONS.SETFOODOPTIONS:\r\n//         return {\r\n//           ...state,\r\n//           [action.foodOptions]:action.value\r\n//         }\r\n//   // dispatch ({type:ACTIONS.SETFOODOPTIONS, diet: 'diet', value: inputValue})\r\n//   // dispatch ({type:ACTIONS.SETFOODOPTIONS, diet: 'diet', value: \"\"})\r\n//       default:\r\n//           return state;\r\n//   }\r\n  \r\n//   }\r\n  ","import React, { useContext,useEffect,useState } from 'react';\r\nimport { stateContext,dispatchContext, totalHitsContext } from '../App';\r\nimport { ACTIONS } from './reducer/actions';\r\n\r\nconst Buttons = () => {\r\n    const state = useContext(stateContext);\r\n    const dispatch = useContext(dispatchContext);\r\n    let totalHits = useContext(totalHitsContext);\r\n    const [optionLength, setOptionLength]= useState(0);\r\n\r\n    useEffect(()=> {\r\n      if (state.foodOptions) {\r\n        setOptionLength(state.foodOptions.length)\r\n      }\r\n    }, [state.foodOptions])\r\n\r\n    const paginationHandler = e => {\r\n        e.preventDefault();\r\n        if (e.target.classList.contains('next-btn')) {\r\n          let newPage= state.page+10;\r\n          dispatch({type:ACTIONS.UPDATESTATE, state: 'page', value:newPage});\r\n        } else if (e.target.classList.contains('prev-btn')) {\r\n          let newPage= state.page-10;\r\n          dispatch({type:ACTIONS.UPDATESTATE, state: 'page', value:newPage});\r\n        }\r\n      }\r\n    \r\n    return (\r\n    <>\r\n        <button\r\n        style={{visibility: state.page===0?\"hidden\":\"visible\"}}\r\n        className=\"nav-btn prev-btn btn\"\r\n        onClick={paginationHandler}\r\n        >Previous</button>\r\n        <button\r\n        style={{visibility: state.page>=totalHits || optionLength === totalHits?\"hidden\":\"visible\"}}\r\n        className=\"nav-btn next-btn btn\"\r\n        onClick={paginationHandler}\r\n        >Next</button>\r\n    </>\r\n    )\r\n}\r\nexport default Buttons;","import React, {createContext, useReducer, useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport Form from './components/Form';\r\nimport RecipeList from './components/RecipeList'\r\nimport ParamsSetter from './components/ParamsSetter';\r\nimport Heading from './components/Heading'\r\nimport reducer from './components/reducer/reducers.js';\r\nimport Buttons from './components/Buttons';\r\nimport { ACTIONS } from './components/reducer/actions';\r\nimport {getSearch} from './components/ApiClient';\r\n\r\nexport const fetchData = async (query, page, fn, cb) => {\r\n  const newData = await fn(query, page);\r\n  cb({type:ACTIONS.UPDATESTATE, state: 'foodOptions', value:newData})\r\n}\r\n\r\nexport const stateContext = createContext();\r\nexport const dispatchContext = createContext();\r\nexport const totalHitsContext = createContext();\r\n\r\nconst initState = {\r\n  query: \"\",\r\n  diet: \"\",\r\n  intolerances: {Dairy: false, Egg: false, \"Tree Nut\": false, Peanut: false, Shellfish: false},\r\n  foodOptions: [],\r\n  apiQ: \"\",\r\n  page: 0\r\n  }\r\nconst App = () => {\r\nconst [state, dispatch]= useReducer(reducer, initState);\r\nconst [totalHits,setTotalHits] = useState(0);\r\n\r\nuseEffect(() => {\r\n  const getData = async () => {\r\n    const allData = await getSearch(state.apiQ, state.page)\r\n    setTotalHits(allData.total);\r\n    return state.query !== ''? dispatch({type:ACTIONS.UPDATESTATE, state: 'foodOptions', value:allData.results}): '';\r\n  }\r\n  getData();\r\n}, [state.query, state.apiQ, state.page])\r\n\r\n\r\n  return (\r\n    <stateContext.Provider value={state}>\r\n      <dispatchContext.Provider value = {dispatch}>\r\n        <totalHitsContext.Provider value = {totalHits}>\r\n        <section className= \"main-container\">\r\n        <h1>My Cookbook App</h1>\r\n        <article className= \"form-container\">\r\n        <Form/>\r\n        </article>\r\n        <article className= \"content-container\">\r\n          {state.query !== null ? <Heading/>: ''}\r\n        <RecipeList/>\r\n        {state.query&&state.query.length> 0 ? <Buttons/>: ''}\r\n        </article>\r\n        </section>\r\n        <ParamsSetter/>\r\n        </totalHitsContext.Provider>\r\n      </dispatchContext.Provider>\r\n    </stateContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}